// Code generated by "enumer -type=DifferenceType -trimprefix=Diff -transform=kebab"; DO NOT EDIT.

package models

import (
	"fmt"
	"strings"
)

const _DifferenceTypeName = "noneprevious-datefirst-datespecific-date"

var _DifferenceTypeIndex = [...]uint8{0, 4, 17, 27, 40}

const _DifferenceTypeLowerName = "noneprevious-datefirst-datespecific-date"

func (i DifferenceType) String() string {
	if i >= DifferenceType(len(_DifferenceTypeIndex)-1) {
		return fmt.Sprintf("DifferenceType(%d)", i)
	}
	return _DifferenceTypeName[_DifferenceTypeIndex[i]:_DifferenceTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _DifferenceTypeNoOp() {
	var x [1]struct{}
	_ = x[DiffNone-(0)]
	_ = x[DiffPreviousDate-(1)]
	_ = x[DiffFirstDate-(2)]
	_ = x[DiffSpecificDate-(3)]
}

var _DifferenceTypeValues = []DifferenceType{DiffNone, DiffPreviousDate, DiffFirstDate, DiffSpecificDate}

var _DifferenceTypeNameToValueMap = map[string]DifferenceType{
	_DifferenceTypeName[0:4]:        DiffNone,
	_DifferenceTypeLowerName[0:4]:   DiffNone,
	_DifferenceTypeName[4:17]:       DiffPreviousDate,
	_DifferenceTypeLowerName[4:17]:  DiffPreviousDate,
	_DifferenceTypeName[17:27]:      DiffFirstDate,
	_DifferenceTypeLowerName[17:27]: DiffFirstDate,
	_DifferenceTypeName[27:40]:      DiffSpecificDate,
	_DifferenceTypeLowerName[27:40]: DiffSpecificDate,
}

var _DifferenceTypeNames = []string{
	_DifferenceTypeName[0:4],
	_DifferenceTypeName[4:17],
	_DifferenceTypeName[17:27],
	_DifferenceTypeName[27:40],
}

// DifferenceTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func DifferenceTypeString(s string) (DifferenceType, error) {
	if val, ok := _DifferenceTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _DifferenceTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to DifferenceType values", s)
}

// DifferenceTypeValues returns all values of the enum
func DifferenceTypeValues() []DifferenceType {
	return _DifferenceTypeValues
}

// DifferenceTypeStrings returns a slice of all String values of the enum
func DifferenceTypeStrings() []string {
	strs := make([]string, len(_DifferenceTypeNames))
	copy(strs, _DifferenceTypeNames)
	return strs
}

// IsADifferenceType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i DifferenceType) IsADifferenceType() bool {
	for _, v := range _DifferenceTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
